{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DashboardScreen(_ref) {\n  var route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var serverUrl = 'https://akinbrand.com.ng/mywi-fi/';\n  useEffect(function () {\n    if (route.params && route.params.username) {\n      axios.post(`${serverUrl}getUserDetails.php`, {\n        username: route.params.username\n      }).then(function (response) {\n        setUsername(response.data.username);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    } else {\n      console.error(\"Username not found in route.params\");\n    }\n  }, [route.params]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Dashboard\"\n    }), _jsxs(Text, {\n      children: [\"Welcome, \", username, \"!\"]\n    })]\n  });\n}","map":{"version":3,"names":["DashboardScreen","_ref","route","_useState","useState","_useState2","_slicedToArray","username","setUsername","serverUrl","useEffect","params","axios","post","then","response","data","catch","error","console","_jsxs","View","style","styles","container","children","_jsx","Text","header"],"sources":["C:/Users/USER/Desktop/nigeram/my-expo-project/DashboardScreen.js"],"sourcesContent":["export default function DashboardScreen({ route }) {\r\n    const [username, setUsername] = useState('');\r\n    const serverUrl = 'https://akinbrand.com.ng/mywi-fi/';\r\n  \r\n    useEffect(() => {\r\n      // Check if 'username' exists in 'route.params' before making the request\r\n      if (route.params && route.params.username) {\r\n        // Fetch the username of the currently logged-in user from the server\r\n        axios\r\n          .post(`${serverUrl}getUserDetails.php`, { username: route.params.username }) // Use 'username' instead of 'userId'\r\n          .then((response) => {\r\n            setUsername(response.data.username);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      } else {\r\n        // Handle the case where 'username' is not available in 'route.params'\r\n        console.error(\"Username not found in route.params\");\r\n      }\r\n    }, [route.params]);\r\n  \r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.header}>Dashboard</Text>\r\n        <Text>Welcome, {username}!</Text>\r\n      </View>\r\n    );\r\n  }\r\n  "],"mappings":";;;AAAA,eAAe,SAASA,eAAeA,CAAAC,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAC3C,IAAAC,SAAA,GAAgCC,QAAQ,CAAC,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAArCI,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAMI,SAAS,GAAG,mCAAmC;EAErDC,SAAS,CAAC,YAAM;IAEd,IAAIR,KAAK,CAACS,MAAM,IAAIT,KAAK,CAACS,MAAM,CAACJ,QAAQ,EAAE;MAEzCK,KAAK,CACFC,IAAI,CAAE,GAAEJ,SAAU,oBAAmB,EAAE;QAAEF,QAAQ,EAAEL,KAAK,CAACS,MAAM,CAACJ;MAAS,CAAC,CAAC,CAC3EO,IAAI,CAAC,UAACC,QAAQ,EAAK;QAClBP,WAAW,CAACO,QAAQ,CAACC,IAAI,CAACT,QAAQ,CAAC;MACrC,CAAC,CAAC,CACDU,KAAK,CAAC,UAACC,KAAK,EAAK;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,MAAM;MAELC,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAC;IACrD;EACF,CAAC,EAAE,CAAChB,KAAK,CAACS,MAAM,CAAC,CAAC;EAElB,OACES,KAAA,CAACC,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BC,IAAA,CAACC,IAAI;MAACL,KAAK,EAAEC,MAAM,CAACK,MAAO;MAAAH,QAAA,EAAC;IAAS,CAAM,CAAC,EAC5CL,KAAA,CAACO,IAAI;MAAAF,QAAA,GAAC,WAAS,EAAClB,QAAQ,EAAC,GAAC;IAAA,CAAM,CAAC;EAAA,CAC7B,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}